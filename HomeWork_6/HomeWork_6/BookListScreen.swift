import Foundation


class BookListScreen: BookCellDelegate {
    var bookCells: [BookCell] = []
    
    init(books: [Book]) {
        renderBooks(array: books)
    }
    
    func renderBooks (array: [Book]) {
        for book in array {
            let bookCell = BookCell(book: book)
            bookCell.delegate = self
            bookCells.append(bookCell)
        }
    }
    
    func toggleStatus (bookCell: BookCell) {
        let book = bookCell.book
        book.isFavorite
            ? print("–ö–Ω–∏–≥–∞ ( \(book.title) ) –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ‚ù§Ô∏è")
            : print("–ö–Ω–∏–≥–∞ ( \(book.title) ) —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ üíî")
    }
    
    func showAllBooks () {
        print("–í—Å–µ –∫–Ω–∏–≥–∏ üìñ")
        
        for index in 0..<bookCells.count {
            let kniga = bookCells[index].book
            print("\n–ö–Ω–∏–≥–∞: \(index + 1) \n–ù–∞–∑–≤–∞–Ω–∏–µ - \(kniga.title), \n–¶–µ–Ω–∞: \(kniga.price) üí∞, \n–í –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö: \(kniga.isFavorite ? "–¥–∞ ‚úÖ" : "–Ω–µ—Ç ‚ùå")")
        }
    }
    
    func toggleIsFav () {
        showAllBooks()
        
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–Ω–∏–≥–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö...üîΩ")
        let indexOfBook = Int(readLine()!)
        
        if indexOfBook != nil {
            if indexOfBook! > 0 && indexOfBook! <= bookCells.count {
                return bookCells[indexOfBook! - 1].toggleFavoriteStatus()
            }
            else { print("–¢–∞–∫–æ–π –∫–Ω–∏–≥–∏ –Ω–µ—Ç ‚ùå") }
        }
        else { print("–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ ‚ùå") }
    }
}
